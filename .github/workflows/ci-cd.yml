name: Django CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Étape 1 : Récupérer le code du dépôt
      - name: Checkout code
        uses: actions/checkout@v3

      # Étape 2 : Configurer Python
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'

      # Étape 3 : Installer les dépendances
      - name: Install dependencies
        run: |
          cd myprojectds1
          pip install -r requirements.txt

      # Étape 4 : Exécuter les tests
      - name: Run tests
        run: |
          cd myprojectds1
          python manage.py test

  deploy:
    needs: test  # Assurez-vous que les tests réussissent avant le déploiement
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Étape 1 : Installer Heroku CLI
      - name: Install Heroku CLI
        run: |
          curl https://cli-assets.heroku.com/install.sh | sh

      # Étape 2 : Authentifier avec Heroku
      - name: Login to Heroku
        run: |
              echo "machine api.heroku.com" >> ~/.netrc
              echo "  login ${{ secrets.HEROKU_EMAIL }}" >> ~/.netrc
              echo "  password ${{ secrets.HEROKU_API_KEY }}" >> ~/.netrc
        env:
              HEROKU_EMAIL: ${{ secrets.HEROKU_EMAIL }}
              HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
    # Étape 3 : Déployer sur Heroku
    - name: Deploy to Heroku
        run: |
            cd myprojectds1  # Naviguer dans le répertoire de votre projet
            git remote add heroku https://git.heroku.com/${{ secrets.HEROKU_APP_NAME }}.git  # Utilisation du secret HEROKU_APP_NAME
            git push heroku master  # Déployer sur la branche master de Heroku
        env:
            HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}  # Nom de votre application Heroku stocké comme secret

